* RX FAMILY ASSEMBLER V.1.02.00.000 *  SOURCE LIST  Sun Nov 10 22:46:20 2013

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V.1.02.00.000)  10-Nov-2013 22:46:1
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-CPU=RX600
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=C:\Users\Sandesh\AppData\Local\Temp\grp709F\resetprg.src
                                 ;-nologo
                                 ;-cpu=rx600
                                 ;-lang=c99
                                 ;-include=C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\..\src
                                 ;-define=NOT_USE_CAN_POLL=1,NOT_DEBUG=1
                                 ;-debug
                                 ;-show=source
                                 ;C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c
                                 
                                 ;C LABEL    INSTRUCTION OPERAND    COMMENT
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                             .SECTION    SI,DATA,ALIGN=4
00000000(00000100H)                          .blkb       256
                                             .SECTION    SU,DATA,ALIGN=4
00000000(00000300H)                          .blkb       768
                                             .SECTION    PResetPRG,CODE
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",68
                                 ;       1 /***********************************************************************/
                                 ;       2 /*                                                                     */
                                 ;       3 /*  FILE        :resetprg.c                                            */
                                 ;       4 /*  DATE        :Fri, Jun 12, 2009                                     */
                                 ;       5 /*  DESCRIPTION :Reset Program                                         */
                                 ;       6 /*  CPU TYPE    :Other                                                 */
                                 ;       7 /*                                                                     */
                                 ;       8 /*  This file is generated by Renesas Project Generator (Ver.4.13).    */
                                 ;       9 /*                                                                     */
                                 ;      10 /***********************************************************************/
                                 ;      11                   
                                 ;      12 
                                 ;      13 
                                 ;      14 #include	<machine.h>
                                 ;       1 /********************************************************************************/
                                 ;       2 /* RX FAMILY C/C++ Compiler                                                     */
                                 ;       3 /* Copyright (C) 2007 (2009 - 2010) Renesas Electronics Corporation and         */
                                 ;       4 /* Renesas Solutions Corp. All rights reserved.                                 */
                                 ;       5 /********************************************************************************/
                                 ;       6 
                                 ;       7 #ifndef _MACHINE
                                 ;       8 #define _MACHINE
                                 ;       9 #include <macro.h>
                                 ;       1 /********************************************************************************/
                                 ;       2 /* RX FAMILY C/C++ Compiler                                                     */
                                 ;       3 /* Copyright (C) 2007 (2009 - 2010) Renesas Electronics Corporation and         */
                                 ;       4 /* Renesas Solutions Corp. All rights reserved.                                 */
                                 ;       5 /********************************************************************************/
                                 ;       6 
                                 ;       7 #ifndef _MACRO
                                 ;       8 #define _MACRO
                                 ;       9 
                                 ;      10 #ifdef __RX
                                 ;      11 
                                 ;      12 #ifndef _NO_MT
                                 ;      13 #define _NO_MT
                                 ;      14 #endif /* !_NO_MT */
                                 ;      15 
                                 ;      16 #ifdef __STDC_VERSION__
                                 ;      17 #if 199901L <= __STDC_VERSION__
                                 ;      18 #define _C99
                                 ;      19 #endif /* 199901L <= __STDC_VERSION__ */
                                 ;      20 #endif /* __STDC_VERSION__ */
                                 ;      21 
                                 ;      22 #ifndef _HAS_TR1
                                 ;      23 #define _HAS_TR1 0
                                 ;      24 #endif /* !_HAS_TR1 */
                                 ;      25 
                                 ;      26 #ifndef __STDC_WANT_LIB_EXT1__
                                 ;      27 #define __STDC_WANT_LIB_EXT1__ 0
                                 ;      28 #endif /* !__STDC_WANT_LIB_EXT1 */
                                 ;      29 
                                 ;      30 #ifndef _ADDED_C_LIB
                                 ;      31 #define _ADDED_C_LIB 0
                                 ;      32 #endif /* !_ADDED_C_LIB */
                                 ;      33 
                                 ;      34 #ifndef __STDC_WANT_SAFER_LIB__
                                 ;      35 #define __STDC_WANT_SAFER_LIB__ 0
                                 ;      36 #endif /* !__STDC_WANT_SAFER_LIB__ */
                                 ;      37 
                                 ;      38 #ifndef _ALT_NS
                                 ;      39 #define _ALT_NS 0
                                 ;      40 #endif /* !_ALT_NS */
                                 ;      41 
                                 ;      42 #ifdef __cplusplus
                                 ;      43 
                                 ;      44 #ifndef _C99
                                 ;      45 #define _C99
                                 ;      46 #endif /* !_C99*/ 
                                 ;      47 
                                 ;      48 #endif /* __cplusplus */
                                 ;      49 
                                 ;      50 #ifdef __embedded_cplusplus
                                 ;      51 
                                 ;      52 #ifndef _NO_NS
                                 ;      53 #define _NO_NS
                                 ;      54 #endif /* !_NO_NS */
                                 ;      55 
                                 ;      56 #ifndef _ECPP
                                 ;      57 #define _ECPP
                                 ;      58 #endif /* !_ECPP */
                                 ;      59 
                                 ;      60 #endif /* __embedded_cplusplus */
                                 ;      61 
                                 ;      62 #ifdef _REENTRANT
                                 ;      63 
                                 ;      64 #ifndef _R_REENT
                                 ;      65 #define _R_REENT
                                 ;      66 #endif /* !_R_REENT */
                                 ;      67 
                                 ;      68 #endif /* _REENTRANT */
                                 ;      69 
                                 ;      70 #endif /* __RX */
                                 ;      71 
                                 ;      72 #endif /* _MACRO */
                                 ;      10 
                                 ;      11 #include <builtin.h>
                                 ;       1 /********************************************************************************/
                                 ;       2 /* RX FAMILY C/C++ Compiler                                                     */
                                 ;       3 /* Copyright (C) 2007 (2009 - 2010) Renesas Electronics Corporation and         */
                                 ;       4 /* Renesas Solutions Corp. All rights reserved.                                 */
                                 ;       5 /********************************************************************************/
                                 ;       6 
                                 ;       7 #ifndef _BUILTIN
                                 ;       8 #define _BUILTIN
                                 ;       9 #include <macro.h>
                                 ;      10 
                                 ;      11 #ifdef __cplusplus
                                 ;      12 extern "C" {
                                 ;      13 #endif
                                 ;      14 
                                 ;      15 /* follow machine.h */
                                 ;      16 extern signed long    _builtin_max(signed long, signed long);
                                 ;      17 extern signed long    _builtin_min(signed long, signed long);
                                 ;      18 extern unsigned long  _builtin_revl(unsigned long);
                                 ;      19 extern unsigned long  _builtin_revw(unsigned long);
                                 ;      20 extern void           _builtin_xchg(signed long *, signed long *);
                                 ;      21 extern long long      _builtin_rmpab(long long, unsigned long, signed char *, signed char *);
                                 ;      22 extern long long      _builtin_rmpaw(long long, unsigned long, short *, short *);
                                 ;      23 extern long long      _builtin_rmpal(long long, unsigned long, long *, long *);
                                 ;      24 extern unsigned long  _builtin_rolc(unsigned long);
                                 ;      25 extern unsigned long  _builtin_rorc(unsigned long);
                                 ;      26 extern unsigned long  _builtin_rotl(unsigned long, unsigned long);
                                 ;      27 extern unsigned long  _builtin_rotr(unsigned long, unsigned long);
                                 ;      28 extern void           _builtin_brk(void);
                                 ;      29 extern void           _builtin_int_exception(signed long);
                                 ;      30 extern void           _builtin_wait(void);
                                 ;      31 extern void           _builtin_nop(void);
                                 ;      32 extern void           _builtin_set_ipl(signed long);
                                 ;      33 extern unsigned char  _builtin_get_ipl(void);
                                 ;      34 extern void           _builtin_set_psw(unsigned long);
                                 ;      35 extern unsigned long  _builtin_get_psw(void);
                                 ;      36 extern void           _builtin_set_fpsw(unsigned long);
                                 ;      37 extern unsigned long  _builtin_get_fpsw(void);
                                 ;      38 extern void           _builtin_set_usp(void *);
                                 ;      39 extern void *         _builtin_get_usp(void);
                                 ;      40 extern void           _builtin_set_isp(void *);
                                 ;      41 extern void *         _builtin_get_isp(void);
                                 ;      42 extern void           _builtin_set_intb(void *);
                                 ;      43 extern void *         _builtin_get_intb(void);
                                 ;      44 extern void           _builtin_set_bpsw(unsigned long);
                                 ;      45 extern unsigned long  _builtin_get_bpsw(void);
                                 ;      46 extern void           _builtin_set_bpc(void *);
                                 ;      47 extern void *         _builtin_get_bpc(void);
                                 ;      48 extern void           _builtin_set_fintv(void *);
                                 ;      49 extern void *         _builtin_get_fintv(void);
                                 ;      50 extern signed long long   _builtin_emul(signed long, signed long);
                                 ;      51 extern unsigned long long _builtin_emulu(unsigned long, unsigned long);
                                 ;      52 extern short          _builtin_macw1(short *, short *, unsigned long);
                                 ;      53 extern short          _builtin_macw2(short *, short *, unsigned long);
                                 ;      54 extern long           _builtin_macl(short *, short *, unsigned long);
                                 ;      55 extern void           _builtin_chg_pmusr(void);
                                 ;      56 extern void             _builtin_set_acc(signed long long data);
                                 ;      57 extern signed long long _builtin_get_acc(void);
                                 ;      58 extern void           _builtin_setpsw_i(void);
                                 ;      59 extern void           _builtin_clrpsw_i(void);
                                 ;      60 
                                 ;      61 #ifdef __cplusplus
                                 ;      62 }
                                 ;      63 #endif /* #ifdef __cplusplus */
                                 ;      64 
                                 ;      65 #endif /* #ifndef _BUILTIN */
                                 ;      12 
                                 ;      13 #define max(data1, data2)                _builtin_max(data1, data2)
                                 ;      14 #define min(data1, data2)                _builtin_min(data1, data2)
                                 ;      15 #define revl(data)                       _builtin_revl(data)
                                 ;      16 #define revw(data)                       _builtin_revw(data)
                                 ;      17 #define xchg(data1, data2)               _builtin_xchg(data1, data2)
                                 ;      18 #define rmpab(init, count, addr1, addr2) _builtin_rmpab(init, count, addr1, addr2)
                                 ;      19 #define rmpaw(init, count, addr1, addr2) _builtin_rmpaw(init, count, addr1, addr2)
                                 ;      20 #define rmpal(init, count, addr1, addr2) _builtin_rmpal(init, count, addr1, addr2)
                                 ;      21 #define rolc(data)                       _builtin_rolc(data)
                                 ;      22 #define rorc(data)                       _builtin_rorc(data)
                                 ;      23 #define rotl(data, num)                  _builtin_rotl(data, num)
                                 ;      24 #define rotr(data, num)                  _builtin_rotr(data, num)
                                 ;      25 #define brk()                            _builtin_brk()
                                 ;      26 #define int_exception(num)               _builtin_int_exception(num)
                                 ;      27 #define wait()                           _builtin_wait()
                                 ;      28 #define nop()                            _builtin_nop()
                                 ;      29 #define set_ipl(level)                   _builtin_set_ipl(level)
                                 ;      30 #define get_ipl()                        _builtin_get_ipl()
                                 ;      31 #define set_psw(data)                    _builtin_set_psw(data)
                                 ;      32 #define get_psw()                        _builtin_get_psw()
                                 ;      33 #define set_fpsw(data)                   _builtin_set_fpsw(data)
                                 ;      34 #define get_fpsw()                       _builtin_get_fpsw()
                                 ;      35 #define set_usp(data)                    _builtin_set_usp(data)
                                 ;      36 #define get_usp()                        _builtin_get_usp()
                                 ;      37 #define set_isp(data)                    _builtin_set_isp(data)
                                 ;      38 #define get_isp()                        _builtin_get_isp()
                                 ;      39 #define set_intb(data)                   _builtin_set_intb(data)
                                 ;      40 #define get_intb()                       _builtin_get_intb()
                                 ;      41 #define set_bpsw(data)                   _builtin_set_bpsw(data)
                                 ;      42 #define get_bpsw()                       _builtin_get_bpsw()
                                 ;      43 #define set_bpc(data)                    _builtin_set_bpc(data)
                                 ;      44 #define get_bpc()                        _builtin_get_bpc()
                                 ;      45 #define set_fintv(data)                  _builtin_set_fintv(data)
                                 ;      46 #define get_fintv()                      _builtin_get_fintv()
                                 ;      47 #define emul(data1, data2)               _builtin_emul(data1, data2)
                                 ;      48 #define emulu(data1, data2)              _builtin_emulu(data1, data2)
                                 ;      49 #define macw1(data1, data2, count)       _builtin_macw1(data1, data2, count)
                                 ;      50 #define macw2(data1, data2, count)       _builtin_macw2(data1, data2, count)
                                 ;      51 #define macl(data1, data2, count)        _builtin_macl(data1, data2, count)
                                 ;      52 #define chg_pmusr()                      _builtin_chg_pmusr()
                                 ;      53 #define set_acc(data)                    _builtin_set_acc(data)
                                 ;      54 #define get_acc()                        _builtin_get_acc()
                                 ;      55 #define setpsw_i()                       _builtin_setpsw_i()
                                 ;      56 #define clrpsw_i()                       _builtin_clrpsw_i()
                                 ;      57 
                                 ;      58 #endif
                                 ;      15 #include	<_h_c_lib.h>
                                 ;       1 /********************************************************************************/
                                 ;       2 /* RX FAMILY C/C++ Compiler                                                     */
                                 ;       3 /* Copyright (C) 2007 (2009 - 2010) Renesas Electronics Corporation and         */
                                 ;       4 /* Renesas Solutions Corp. All rights reserved.                                 */
                                 ;       5 /********************************************************************************/
                                 ;       6 
                                 ;       7 #ifndef _H_C_LIB
                                 ;       8 #define _H_C_LIB
                                 ;       9 #include <macro.h>
                                 ;      10 
                                 ;      11 #ifdef __cplusplus
                                 ;      12 extern "C"{
                                 ;      13 #endif
                                 ;      14 extern void _CALL_INIT(void); /* for global class object initial processing */
                                 ;      15 extern void _CALL_END(void);  /* for global class object post-processing */
                                 ;      16 extern void _INITSCT(void);   /* Clear BSS, and copy DATA from ROM to RAM */
                                 ;      17 #ifdef __cplusplus
                                 ;      18 }
                                 ;      19 #endif /* #ifdef __cplusplus */
                                 ;      20 
                                 ;      21 #endif /* #ifndef _H_C_LIB */
                                 ;      16 //#include	<stddef.h>					// Remove the comment when you use errno
                                 ;      17 //#include 	<stdlib.h>					// Remove the comment when you use rand()
                                 ;      18 #include	"stacksct.h"
                                 ;       1 /***********************************************************************/
                                 ;       2 /*                                                                     */
                                 ;       3 /*  FILE        :stacksct.h                                            */
                                 ;       4 /*  DATE        :Fri, Jun 12, 2009                                     */
                                 ;       5 /*  DESCRIPTION :Setting of Stack area                                 */
                                 ;       6 /*  CPU TYPE    :Other                                                 */
                                 ;       7 /*                                                                     */
                                 ;       8 /*  This file is generated by Renesas Project Generator (Ver.4.13).    */
                                 ;       9 /*                                                                     */
                                 ;      10 /***********************************************************************/
                                 ;      11 #pragma stacksize su=0x300         /* Do not modify this line. */
                                 ;      12 #pragma stacksize si=0x100         /* Do not modify this line. */
                                 ;      19 
                                 ;      20 #pragma inline_asm Change_PSW_PM_to_UserMode
                                 ;      21 static void Change_PSW_PM_to_UserMode(void);
                                 ;      22 
                                 ;      23 #ifdef __cplusplus
                                 ;      24 extern "C" {
                                 ;      25 #endif
                                 ;      26 void PowerON_Reset_PC(void);
                                 ;      27 void main(void);
                                 ;      28 #ifdef __cplusplus
                                 ;      29 }
                                 ;      30 #endif
                                 ;      31 
                                 ;      32 //#ifdef __cplusplus				// Use SIM I/O
                                 ;      33 //extern "C" {
                                 ;      34 //#endif
                                 ;      35 //extern void _INIT_IOLIB(void);
                                 ;      36 //extern void _CLOSEALL(void);
                                 ;      37 //#ifdef __cplusplus
                                 ;      38 //}
                                 ;      39 //#endif
                                 ;      40 
                                 ;      41 #define PSW_init  0x00010000
                                 ;      42 #define FPSW_init 0x00000100
                                 ;      43 
                                 ;      44 //extern void srand(_UINT);		// Remove the comment when you use rand()
                                 ;      45 //extern _SBYTE *_s1ptr;				// Remove the comment when you use strtok()
                                 ;      46 		
                                 ;      47 //#ifdef __cplusplus				// Use Hardware Setup
                                 ;      48 //extern "C" {
                                 ;      49 //#endif
                                 ;      50 //extern void HardwareSetup(void);
                                 ;      51 //#ifdef __cplusplus
                                 ;      52 //}
                                 ;      53 //#endif
                                 ;      54 	
                                 ;      55 //#ifdef __cplusplus			// Remove the comment when you use global class object
                                 ;      56 //extern "C" {					// Sections C$INIT and C$END will be generated
                                 ;      57 //#endif
                                 ;      58 //extern void _CALL_INIT(void);
                                 ;      59 //extern void _CALL_END(void);
                                 ;      60 //#ifdef __cplusplus
                                 ;      61 //}
                                 ;      62 //#endif
                                 ;      63 
                                 ;      64 #pragma section ResetPRG
                                 ;      65 
                                 ;      66 #pragma entry PowerON_Reset_PC
                                 ;      67 
                                 ;      68 void PowerON_Reset_PC(void)
                                             .glb        _PowerON_Reset_PC
00000000                         _PowerON_Reset_PC:                 ; function: PowerON_Reset_PC
                                             .STACK      _PowerON_Reset_PC=4
00000000 FD7302rrrrrrrr                      MVTC        #(TOPOF SU + SIZEOF SU),USP
00000007 FD730Arrrrrrrr                      MVTC        #(TOPOF SI + SIZEOF SI),ISP
0000000E                         L10:
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",71
                                 ;      69 { 
                                 ;      70 #if __RENESAS_VERSION__ >= 0x01010000    
                                 ;      71     set_intb((void *)__sectop("C$VECT"));
0000000E FB52rrrrrrrr                        MOV.L       #TOPOF C$VECT,R5
00000014 FD685C                              MVTC        R5,INTB
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",75
                                 ;      72 #else
                                 ;      73     set_intb((unsigned long)__sectop("C$VECT"));
                                 ;      74 #endif    
                                 ;      75 	set_fpsw(FPSW_init);
00000017 FB5A0001                            MOV.L       #00000100H,R5
0000001B FD6853                              MVTC        R5,FPSW
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",77
                                 ;      76 
                                 ;      77 	_INITSCT();
0000001E 05rrrrrr             A              BSR         __INITSCT
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",85
                                 ;      78 
                                 ;      79 //	_INIT_IOLIB();					// Use SIM I/O
                                 ;      80 
                                 ;      81 //	errno = 0;						// Remove the comment when you use errno
                                 ;      82 //	srand((_UINT)1);				// Remove the comment when you use rand()
                                 ;      83 //	_s1ptr = NULL;					// Remove the comment when you use strtok()
                                 ;      84 		
                                 ;      85     nop();
00000022 03                                  NOP
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",89
                                 ;      86 
                                 ;      87 //	_CALL_INIT();					// Remove the comment when you use global class object
                                 ;      88 
                                 ;      89 	set_psw(PSW_init);				// Set Ubit & Ibit for PSW
00000023 FB5E000001                          MOV.L       #00010000H,R5
00000028 FD6850                              MVTC        R5,PSW
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",90
                                 ;      90 	Change_PSW_PM_to_UserMode();	// Change PSW PMbit (SuperVisor->User)
                                             ._LINE_TOP  inline_asm
                                 
0000002B FD6A01                  	MVFC   PSW,R1
0000002E 7731000010              	OR     #00100000h,R1
00000033 7EA1                    	PUSH.L R1
00000035 FD6A11                  	MVFC   PC,R1
00000038 62A1                    	ADD    #10,R1
0000003A 7EA1                    	PUSH.L R1
0000003C 7F95                    	RTE
0000003E 03                      	NOP
0000003F 03                      	NOP
                                             ._LINE_END  inline_asm
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",92
                                 ;      91 
                                 ;      92 	main();
00000040 05rrrrrr             A              BSR         _main
                                             .LINE       "C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\src\resetprg.c",98
                                 ;      93 
                                 ;      94 //	_CLOSEALL();					// Use SIM I/O
                                 ;      95 	
                                 ;      96 //	_CALL_END();					// Remove the comment when you use global class object
                                 ;      97 
                                 ;      98 	brk();
00000044 00                                  BRK
00000045 02                                  RTS
                                 ;      99 }
                                 ;     100 
                                 ;     101 static void Change_PSW_PM_to_UserMode(void)
                                 ;     102 {
                                 ;     103 	MVFC   PSW,R1
                                 ;     104 	OR     #00100000h,R1
                                 ;     105 	PUSH.L R1
                                 ;     106 	MVFC   PC,R1
                                 ;     107 	ADD    #10,R1
                                 ;     108 	PUSH.L R1
                                 ;     109 	RTE
                                 ;     110 	NOP
                                 ;     111 	NOP
                                 ;     112 }
                                             .glb        __INITSCT
                                             .glb        _main
                                             .SECTION    C$VECT,DATA,ALIGN=4
                                             .END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00408   LINES

Section List

Attr         Size               Name
DATA     0000000256(00000100H)  SI
DATA     0000000768(00000300H)  SU
CODE     0000000070(00000046H)  PResetPRG
DATA     0000000000(00000000H)  C$VECT

Cpu Type

-CPU=RX600

Command Parameter

-output=C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\Debug\resetprg.obj
-nologo
-cpu=rx600
-debug
-listfile=C:\Users\Sandesh\Documents\GitHub\rx62n\projects\CAN\CAN\Debug\resetprg.lst
